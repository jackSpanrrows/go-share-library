package elasticsearch

import (
	"context"
	"fmt"

	"gopkg.in/olivere/elastic.v3"
)



var esclient *Esconfig

func init() {
	esclient = &Esconfig{
		ES_PORT:9200,
		ES_HOST:"127.0.0.1",
	}
}

func(this *Esconfig) EsClient() (*elastic.Client, error) {
	cfg := []elastic.ClientOptionFunc{
		elastic.SetURL(fmt.Sprintf("http://%v:%v", this.ES_HOST, this.ES_PORT)),
		elastic.SetSniff(this.ES_SNIFF),
	}

	client, err := elastic.NewSimpleClient(cfg...)

	if err != nil {
		fmt.Printf("当前连线ES失败:%v", err)
		return nil, err

	}

	return client, nil
}

/**
获取某一条数据
*/
func(this *Esconfig) Gets(esindex, esid, estype string) (*elastic.GetResult, error) {
	data := &elastic.GetResult{}
	client, err := this.EsClient()
	if err != nil {
		return data, err
	}
	data, err1 := client.Get().Index(esindex).Type(esid).Id(estype).DoC(context.Background())

	if err1 != nil {
		return data, err
	}

	if data.Found {
		fmt.Printf("Got document %s in version %d from index %s, type %s\n", data.Id, data.Version, data.Index, data.Type)

	}

	return data, nil
}

func(this *Esconfig) create(AutoGenerated *AutoGenerated) {

}
